{"version":3,"sources":["components/Notification.js","components/Footer.js","services/notes.js","components/Notes.js","components/Form.js","App.js","index.js"],"names":["Notification","message","className","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notes","notesToShow","toggleImportanceOf","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","map","note","content","icon","onclick","isRound","Form","addNote","newNote","handleNoteChange","onSubmit","value","onChange","type","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","event","preventDefault","noteObject","date","Date","toISOString","important","Math","random","returnedNote","concat","console","log","target","filter","size","alignSelf","mb","fontWeight","bgGradient","bgClip","onClick","leftIcon","find","n","changedNote","catch","error","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd4eabdd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import {\n  HStack,\n  IconButton,\n  Spacer,\n  StackDivider,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { BiShow } from \"react-icons/all\";\n\nconst Notes = ({ notesToShow, toggleImportanceOf }) => {\n  return (\n    <VStack\n      divider={<StackDivider />}\n      borderColor=\"gray.100\"\n      borderWidth=\"2px\"\n      p=\"4\"\n      borderRadius=\"lg\"\n      w=\"100%\"\n      maxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n      alignItems=\"strech\"\n    >\n      {notesToShow.map((note) => (\n        <HStack key={note.id}>\n          <Text>{note.content}</Text>\n          <Spacer />\n          <IconButton\n            aria-label=\"temp\"\n            icon={<BiShow />}\n            onclick={() => toggleImportanceOf(note.id)}\n            isRound=\"true\"\n          />\n        </HStack>\n      ))}\n    </VStack>\n  );\n};\n\nexport default Notes;\n// <List spacing={3}>\n//   {notesToShow.map((note) => (\n//     <Note\n//       key={note.id}\n//       note={note}\n//       toggleImportance={() => toggleImportanceOf(note.id)}\n//     />\n//   ))}\n// </List>;\n","import React from \"react\";\nimport { Button, HStack, Input } from \"@chakra-ui/react\";\n\nconst Form = ({ addNote, newNote, handleNoteChange }) => {\n  return (\n    <form onSubmit={addNote}>\n      <HStack>\n        <Input value={newNote} onChange={handleNoteChange} />\n        <Button type=\"submit\">save</Button>\n      </HStack>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState } from \"react\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport noteService from \"./services/notes\";\nimport {\n  Button,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  IconButton,\n  Input,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { FaSun } from \"react-icons/fa\";\nimport { BiShow } from \"react-icons/all\";\nimport Notes from \"./components/Notes\";\nimport Form from \"./components/Form\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <VStack p={8}>\n      <IconButton\n        icon={<FaSun />}\n        isRound=\"true\"\n        size=\"lg\"\n        alignSelf=\"flex-end\"\n        aria-label=\"test\"\n      />\n      <Heading\n        mb=\"8\"\n        fontWeight=\"extrabold\"\n        size=\"2xl\"\n        bgGradient=\"linear(to-r,pink.500,pink.300,blue.500)\"\n        bgClip=\"text\"\n      >\n        Notes\n      </Heading>\n      <Notification message={errorMessage} />\n      <Button onClick={() => setShowAll(!showAll)} leftIcon={<BiShow />}>\n        show {showAll ? \"important\" : \"all\"}\n      </Button>\n      <Notes\n        notesToShow={notesToShow}\n        toggleImportanceOf={toggleImportanceOf}\n      />\n      <Form\n        addNote={addNote}\n        newNote={newNote}\n        handleNoteChange={handleNoteChange}\n      />\n      <form onSubmit={addNote}>\n        <Input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </VStack>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n// import \"./index.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}